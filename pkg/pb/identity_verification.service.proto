syntax = "proto3";

import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
  string json_name = 50001;
}

package identity_verification;

option go_package = "pkg/pb";

// Enum for identity types
enum IdentityType {
    NIN = 0;
    VNIN = 1;
    NIGERIAN_PASSPORT = 2;
    BVN = 3;
    DRIVERS_LICENSE = 4;
}

// Service definition
service VerificationService {
    rpc VerifyNIN(VerifyNINRequest) returns (VerifyNINResponse);
    rpc VerifyVNIN(VerifyNINRequest) returns (VerifyNINResponse);
    rpc VerifyDL(VerifyDLRequest) returns (VerifyDLResponse);
    rpc VerifyPassport(VerifyPassportRequest) returns (VerifyPassportResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc VerifyIDImage(VerifyIdentityImageRequest) returns (VerifyIdentityImageResponse);

}



// VerifyNINRequest is the request message for verifying NIN
message VerifyNINRequest {
    string idNumber = 1;
    string firstname = 2;
    string lastname = 3;
    string middlename = 4;
    string dob = 5;
    string phone = 6;
    string email = 7;
    string gender = 8;
}

// VerifyDLRequest is the request message for verifying Driver's License
message VerifyDLRequest {
    string idNumber = 1;
    string firstname = 2;
    string lastname = 3;
    string middlename = 4;
    string dob = 5;
    string phone = 6;
    string email = 7;
    string gender = 8;
}

// VerifyPassportRequest is the request message for verifying Passport
message VerifyPassportRequest {
    string idNumber = 1;
    string firstname = 2;
    string lastname = 3;
    string middlename = 4;
    string dob = 5;
    string phone = 6;
    string email = 7;
    string gender = 8;
}

// Request message for verifying identity image
message VerifyIdentityImageRequest {
    IdentityType idType = 1;
    string idNumber = 2;
    string photoUrl = 3;
    string photoBase64 = 4;
}

// LoginRequest and LoginResponse
message LoginRequest {
    string client_id = 1;
    string secret_key = 2;
}

message LoginResponse {
    string token = 1;
}

// Reused message types with unique names
message ApplicantNIN {
    string Firstname = 1 [ (json_name) = "firstname"];
    string Lastname = 2 [ (json_name) = "lastname"];
}

message FieldMatchesNIN {
    bool Firstname = 1 [ (json_name) = "firstname"];
    bool Lastname = 2 [ (json_name) = "lastname"];
}

message NinCheck {
    string Status = 1 [ (json_name) = "status"];
    FieldMatchesNIN FieldMatches = 2 [ (json_name) = "fieldMatches"];
}

message SummaryNIN {
    NinCheck NinCheck = 1 [ (json_name) = "nin_check"];
}

message StatusNIN {
    string State = 1  [ (json_name) = "state"];
    string Status = 2  [ (json_name) = "status"];
}

message Nin {
    string Nin = 1 [ (json_name) = "nin"];
    string Firstname = 2 [ (json_name) = "firstname"];
    string Lastname = 3 [ (json_name) = "lastname"];
    string Middlename = 4 [ (json_name) = "middlename"];
    string Phone = 5 [ (json_name) = "phone"];
    string Gender = 6 [ (json_name) = "gender"];
    string Birthdate = 7 [ (json_name) = "birthdate"];
    string Photo = 8 [ (json_name) = "photo"];
    string Address = 9 [ (json_name) = "address"];
}

// Response message for verifying NIN
message VerifyNINResponse {
    int32 Id = 1 [ (json_name) = "id"];
    ApplicantNIN Applicant = 2 [ (json_name) = "applicant"];
    SummaryNIN Summary = 3 [ (json_name) = "summary"];
    StatusNIN Status = 4 [ (json_name) = "status"];
    Nin Nin = 5 [ (json_name) = "nin"];
}

message ApplicantDL {
    string Firstname = 1 [ (json_name) = "firstname"];
    string Lastname = 2 [ (json_name) = "lastname"];
}

message FieldMatchesDL {
    bool Firstname = 1 [ (json_name) = "firstname"];
    bool Lastname = 2 [ (json_name) = "lastname"];
}

message DriversLicenseCheck {
    string Status = 1 [ (json_name) = "status"];
    FieldMatchesDL FieldMatches = 2 [ (json_name) = "fieldMatches"];
}

message SummaryDL {
    DriversLicenseCheck DriversLicenseCheck = 1 [ (json_name) = "drivers_license_check"];
}

message StatusDL {
    string State = 1 [ (json_name) = "state"];
    string Status = 2 [ (json_name) = "status"];
}

message DriversLicense {
    string DriversLicense = 1 [ (json_name) = "drivers_license"];
    string Firstname = 2 [ (json_name) = "firstname"];
    string Lastname = 3 [ (json_name) = "lastname"];
    string Middlename = 4 [ (json_name) = "middlename"];
    string Birthdate = 5 [ (json_name) = "birthdate"];
    string Photo = 6 [ (json_name) = "photo"];
    string IssuedDate = 7 [ (json_name) = "issued_date"];
    string ExpiryDate = 8 [ (json_name) = "expiry_date"];
    string StateOfIssue = 9 [ (json_name) = "state_of_issue"];
}

// Response message for verifying Driver's License
message VerifyDLResponse {
    int32 Id = 1 [ (json_name) = "id"];
    ApplicantDL Applicant = 2 [ (json_name) = "applicant"];
    SummaryDL Summary = 3 [ (json_name) = "summary"];
    StatusDL Status = 4 [ (json_name) = "status"];
    DriversLicense DriversLicense = 5 [ (json_name) = "drivers_license"];
}

message ApplicantPassport {
    string Firstname = 1 [ (json_name) = "firstname"];
    string Lastname = 2 [ (json_name) = "lastname"];
}

message FieldMatchesPassport {
    bool Firstname = 1 [ (json_name) = "firstname"];
    bool Lastname = 2 [ (json_name) = "lastname"];
}

message PassportCheck {
    string Status = 1 [ (json_name) = "status"];
    FieldMatchesPassport FieldMatches = 2 [ (json_name) = "fieldMatches"];
}

message SummaryPassport {
    PassportCheck PassportCheck = 1 [ (json_name) = "passport_check"];
}

message StatusPassport {
    string State = 1 [ (json_name) = "state"];
    string Status = 2 [ (json_name) = "status"];
}

message Passport {
    string PassportNo = 1 [ (json_name) = "passport_no"];
    string Firstname = 2 [ (json_name) = "firstname"];
    string Lastname = 3 [ (json_name) = "lastname"];
    string Middlename = 4 [ (json_name) = "middlename"];
    string Birthdate = 5 [ (json_name) = "birthdate"];
    string Photo = 6 [ (json_name) = "photo"];
    string Gender = 7 [ (json_name) = "gender"];
    string IssuedAt = 8 [ (json_name) = "issued_at"];
    string IssuedDate = 9 [ (json_name) = "issued_date"];
    string ExpiryDate = 10 [ (json_name) = "expiry_date"];
}

// Response message for verifying Passport
message VerifyPassportResponse {
    int32 Id = 1 [ (json_name) = "id"];
    ApplicantPassport Applicant = 2 [ (json_name) = "applicant"];
    SummaryPassport Summary = 3 [ (json_name) = "summary"];
    StatusPassport Status = 4 [ (json_name) = "status"];
    Passport Passport = 5 [ (json_name) = "passport"];
}

// Face verification check message
message FaceVerificationCheck {
    bool Match = 1 [ (json_name) = "match"];
    float MatchScore = 2 [ (json_name) = "match_score"];
    float MatchingThreshold = 3 [ (json_name) = "matching_threshold"];
    float MaxScore = 4 [ (json_name) = "max_score"];
}

// Summary message
message Summary {
    FaceVerificationCheck FaceVerificationCheck = 1 [ (json_name) = "face_verification_check"];
}

// Next of kin message
message NextOfKin {
    string Firstname = 1 [ (json_name) = "firstname"];
    string Lastname = 2 [ (json_name) = "lastname"];
    string Middlename = 3 [ (json_name) = "middlename"];
    string Address1 = 4 [ (json_name) = "address1"];
    string Lga = 5 [ (json_name) = "lga"];
    string State = 6 [ (json_name) = "state"];
    string Town = 7 [ (json_name) = "town"];
}

// Residence message
message Residence {
    string Address1 = 1 [ (json_name) = "address1"];
    string Lga = 2 [ (json_name) = "lga"];
    string State = 3 [ (json_name) = "state"];
}

// Face verification message
message FaceVerification {
    string Nin = 1 [ (json_name) = "nin"];
    string Title = 2 [ (json_name) = "title"];
    string Firstname = 3 [ (json_name) = "firstname"];
    string Lastname = 4 [ (json_name) = "lastname"];
    string Phone = 5 [ (json_name) = "phone"];
    string Email = 6 [ (json_name) = "email"];
    string Gender = 7 [ (json_name) = "gender"];
    string Height = 8 [ (json_name) = "height"];
    string Profession = 9 [ (json_name) = "profession"];
    string MaritalStatus = 10 [ (json_name) = "marital_status"];
    string EmploymentStatus = 11 [ (json_name) = "employment_status"];
    string Birthdate = 12 [ (json_name) = "birthdate"];
    string BirthState = 13 [ (json_name) = "birth_state"];
    string BirthCountry = 14 [ (json_name) = "birth_country"];
    NextOfKin NextOfKin = 15 [ (json_name) = "next_of_kin"];
    string Nspokenlang = 16 [ (json_name) = "nspokenlang"];
    string Ospokenlang = 17 [ (json_name) = "ospokenlang"];
    string Photo = 18 [ (json_name) = "photo"];
    string Religion = 19 [ (json_name) = "religion"];
    Residence Residence = 20 [ (json_name) = "residence"];
    string LgaOfOrigin = 21 [ (json_name) = "lga_of_origin"];
    string PlaceOfOrigin = 22 [ (json_name) = "place_of_origin"];
    string StateOfOrigin = 23 [ (json_name) = "state_of_origin"];
    string Signature = 24 [ (json_name) = "signature"];
    string TrackingId = 25 [ (json_name) = "tracking_id"];
}

// Status message
message Status {
    string State = 1 [ (json_name) = "state"];
    string Status = 2 [ (json_name) = "status"];
}

// Response message for verifying identity image
message VerifyIdentityImageResponse {
    int32 Id = 1 [ (json_name) = "id"];
    Summary Summary = 2 [ (json_name) = "summary"];
    Status Status = 3 [ (json_name) = "status"];
    FaceVerification FaceVerification = 4 [ (json_name) = "face_verification"];
}
