syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "pkg/pb/model/user.model.proto";


package user;

option go_package = "pkg/pb";


// Generated according to https://cloud.google.com/apis/design/standard_methods
service UserService {
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}

 rpc GetUser(GetUserRequest) returns (User) { }

  rpc CreateUser(User) returns (User) { }

  rpc UpdateUser(User) returns (User) {}

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {}

   rpc UpdateUserIDImage(UpdateIDImageRequest) returns (UpdateIDImageResponse) {}

  rpc UpdateUserIDNumber(UpdateIDNumberRequest) returns (UpdateIDNumberResponse) {}

   rpc UpdateUserSelfie(UpdateSelfieRequest) returns (UpdateSelfieResponse) {}

   rpc VerifyUser(VerifyUserRequest) returns (google.protobuf.Empty) {}
   rpc UpdateUserIDType(UpdateIDTypeRequest) returns (UpdateIDTypeResponse) {}


  rpc UpdateUserProfilePicture(UpdateProfilePictureRequest) returns (User);

    rpc UpdateUserAddress(UpdateUserAddressRequest) returns (Address);


}

message ListUsersRequest {
  // The parent resource name, for example, "shelves/shelf1"
  optional string parent = 1;

  // The maximum number of items to return.
  int32 Limit = 2;

  // The next_page_token value returned from a previous List request, if any.
  int32 Page = 3;

  optional string Email = 4;

  optional string Name = 5;

  optional string Role = 6;

  optional google.protobuf.Timestamp CreatedAt  = 7;
  optional google.protobuf.Timestamp ModifiedAt = 8;
}

message ListUsersResponse {
  // The field name should match the noun "User" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated User Users = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  Meta Meta  = 2;
}

message GetUserRequest {
  // The field will contain name of the resource requested.
  string Id = 1;
}

message DeleteUserRequest {

  // The resource name of the User to be deleted.
  string id = 1;
}

message UpdateIDImageRequest {
 string UserId = 1; // The ID of the user.
 string IdImagePath = 2; // The path to the uploaded ID image.
}

// The response message for updating a user's ID image.
message UpdateIDImageResponse {
 bool Success = 1; // Whether the update was successful.
 User user = 2;

}

message UpdateIDNumberRequest {
 string UserId = 1; // The ID of the user.
 int32 IdNumber = 2; // The new ID number of the user.
 string Firstname = 3;
 string Lastname = 4;
}

// The response message for updating a user's ID number.
message UpdateIDNumberResponse {
 bool Success = 1; // Whether the update was successful.
  User user = 2;
}

message UpdateSelfieRequest {
 string UserId = 1; // The ID of the user.
 string SelfiePath = 2; // The path to the uploaded selfie.
}

// The response message for updating a user's selfie.
message UpdateSelfieResponse {
 bool Success = 1; // Whether the update was successful.
 User user = 2;
}

message UpdateIDTypeRequest {
  string UserId = 1;
  IdType IdType = 2;
}

// Response message for updating ID type
message UpdateIDTypeResponse {
  User User = 1;
  }
message UpdateProfilePictureRequest {
    string UserId = 1;
    string ProfilePicturePath = 2;
}

// Define the response message for updating the user profile picture
message UpdateProfilePictureResponse {
    string Message = 1;
    google.protobuf.Timestamp UpdatedAt = 2;
}
message UpdateUserAddressRequest {
  string UserId = 1;
  Address Address = 2;
}

message VerifyUserRequest {
 string UserId = 1; // The ID of the user.
 string IdNumber = 2; // The new ID number of the user.
 string Firstname = 3;
 string Lastname = 4;
 IdType IdType = 5;
}