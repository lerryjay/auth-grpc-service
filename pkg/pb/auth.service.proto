syntax = "proto3";

package auth;

import "google/protobuf/empty.proto";

option go_package = "pkg/pb";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service AuthService {

  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {}

  rpc SocialLogin(SocialLoginRequest) returns (LoginUserResponse) {}

  rpc ChangePassword(ChangePasswordRequest) returns (google.protobuf.Empty) {}

  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse) {}

  rpc ResetPassword(UpdatePasswordRequest) returns (google.protobuf.Empty) {}

  rpc HasPermission(HasPermissionRequest) returns (google.protobuf.Empty) { }

  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) { }

  rpc VerifyOTP(VerifyOTPRequest) returns (google.protobuf.Empty) { }
}

message LoginUserRequest {
  // The Login Id
  string LoginId = 1;
  // The Password
  optional string Password = 2;
}

message SocialLoginRequest {
  string Email = 1;
  string FirstName = 2;
  string LastName = 3;
  string Token = 4;
  string Issuer = 5;
  string Imageurl = 6;
}

message LoginUserResponse {
  // Generic response used by all
  string Token = 1;
  string Message = 2;
  string Error = 3;
}


message ChangePasswordRequest {
  // The field will contain name of the resource requested.
  string Id = 1;
  string Oldpassword = 2;
  string Newpassword = 3;
}

message ForgotPasswordRequest {
  // The field will contain name of the resource requested.
  string LoginId = 1;
}

message ForgotPasswordResponse {
  // The field will contain name of the resource requested.
  string FirstName = 1;
  string LastName = 2;
  string Email = 3;
  string Token = 4;
  string TokenExpiryDate = 5;

}

message UpdatePasswordRequest {
  // Updates an auth account with new password
  string LoginId = 1;
  string Token = 2;
  string Password = 3;
}

message HasPermissionRequest {
  // Checks an ID has a certain permission
  string Id = 1;
  string Permission = 2;
}

message ValidateTokenRequest {
  // Checks auth token is valid
  string Token = 1;
}

message ValidateTokenResponse {
  // Checks auth token is valid
  string Id = 1;
  string Role = 2;
}

message VerifyOTPRequest {
  // Checks auth token is valid
  string LoginId = 1;
  string Token = 2;
}





// TODO: Set config for permission type possibly in env